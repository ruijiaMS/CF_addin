{"version":3,"file":"functions.js","mappings":"m8CASA,SAAgBA,EAAIC,EAAeC,GACjC,OAAOD,EAAQC,CACjB,CASA,SAAgBC,EAAcF,EAAeC,GAE3C,OADAE,EAAK,KACEH,EAAQC,CACjB,CASA,SAAgBG,EAAaJ,EAAeC,GAE1C,OADAE,EAAK,KACEH,EAAQC,CACjB,CASA,SAAgBI,EAAaL,EAAeC,GAE1C,OADAE,EAAK,KACEH,EAAQC,CACjB,CASA,SAAgBK,EAAaN,EAAeC,GAE1C,OADAE,EAAK,KACEH,EAAQC,CACjB,CAEA,SAASE,EAAKI,GAEZ,IADA,IAAIC,EAAQC,KAAKC,MAAOA,EAAMF,EACvBE,EAAMF,EAAQD,GACnBG,EAAMD,KAAKC,KAEf,CAOA,SAAgBC,EAAMC,GACpB,IAAMC,EAAQC,aAAY,WACxB,IAAMC,EAAOC,IACbJ,EAAWK,UAAUF,EACvB,GAAG,KAEHH,EAAWM,WAAa,WACtBC,cAAcN,EAChB,CACF,CAMA,SAAgBG,IACd,OAAO,IAAIP,MAAOW,oBACpB,CAQA,SAAgBC,EAAUC,EAAqBV,GAC7C,IAAIW,EAAS,EACPV,EAAQC,aAAY,WACxBS,GAAUD,EACVV,EAAWK,UAAUM,EACvB,GAAG,KAEHX,EAAWM,WAAa,WACtBC,cAAcN,EAChB,CACF,CAQA,SAAgBW,EAAWC,GAGzB,OAFAC,QAAQC,IAAIF,GAELA,CACT,C,0KA/GAG,EAAAA,IAAA7B,EAWA6B,EAAAA,cAAA1B,EAYA0B,EAAAA,aAAAxB,EAYAwB,EAAAA,aAAAvB,EAYAuB,EAAAA,aAAAtB,EAiBAsB,EAAAA,MAAAjB,EAeAiB,EAAAA,YAAAZ,EAUAY,EAAAA,UAAAP,EAkBAO,EAAAA,WAAAJ,EAwCAK,gBAAgBC,UAAU,MAAO/B,GACjC8B,gBAAgBC,UAAU,gBAAiB5B,GAC3C2B,gBAAgBC,UAAU,eAAgB1B,GAC1CyB,gBAAgBC,UAAU,eAAgBzB,GAC1CwB,gBAAgBC,UAAU,eAAgBxB,GAC1CuB,gBAAgBC,UAAU,QAASnB,GACnCkB,gBAAgBC,UAAU,YAAaT,GACvCQ,gBAAgBC,UAAU,MAAON,GACjCK,gBAAgBC,UAAU,iBApC1B,W,kGAOE,OALMC,EAAU,IAAIC,MAAMC,gBAGpBC,EAAQH,EAAQI,SAASC,WAAWC,qBAAqBC,SAAS,OAClEC,KAAK,UACX,GAAMR,EAAQS,Q,OAGd,OAHAC,EAAAC,OAGO,CAAP,EAAOR,EAAMS,OAAO,GAAG,I,UA2BzBd,gBAAgBC,UAAU,yBAhB1B,SAA+Bc,EAAOC,GACpC,MAAO,CACHC,KAAM,kBACNC,WAAYH,EACZI,aAAcH,EAEpB,G,ICvJoB,OAAO,EADD,CAAC,E","sources":["webpack://excel-custom-functions/./src/functions/functions.ts","webpack://excel-custom-functions/webpack/startup"],"sourcesContent":["/* global clearInterval, console, CustomFunctions, setInterval */\n\n/**\n * Adds two numbers.\n * @customfunction\n * @param first First number\n * @param second Second number\n * @returns The sum of the two numbers.\n */\nexport function add(first: number, second: number): number {\n  return first + second;\n}\n\n/**\n * Adds two numbers and wait 10s return.\n * @customfunction\n * @param first First number\n * @param second Second number\n * @returns The sum of the two numbers.\n */\nexport function addAndWait10s(first: number, second: number): number {\n  wait(10000);\n  return first + second;\n}\n\n/**\n * Adds two numbers and wait 2s return.\n * @customfunction\n * @param first First number\n * @param second Second number\n * @returns The sum of the two numbers.\n */\nexport function addAndWait2s(first: number, second: number): number {\n  wait(2000);\n  return first + second;\n}\n\n/**\n * Adds two numbers and wait 3s return.\n * @customfunction\n * @param first First number\n * @param second Second number\n * @returns The sum of the two numbers.\n */\nexport function addAndWait3s(first: number, second: number): number {\n  wait(3000);\n  return first + second;\n}\n\n/**\n * Adds two numbers and wait 5s return.\n * @customfunction\n * @param first First number\n * @param second Second number\n * @returns The sum of the two numbers.\n */\nexport function addAndWait5s(first: number, second: number): number {\n  wait(5000);\n  return first + second;\n}\n\nfunction wait(ms) {\n  var start = Date.now(), now = start;\n  while (now - start < ms) {\n    now = Date.now();\n  }\n}\n\n/**\n * Displays the current time once a second.\n * @customfunction\n * @param invocation Custom function handler\n */\nexport function clock(invocation: CustomFunctions.StreamingInvocation<string>): void {\n  const timer = setInterval(() => {\n    const time = currentTime();\n    invocation.setResult(time);\n  }, 1000);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n}\n\n/**\n * Returns the current time.\n * @returns String with the current time formatted for the current locale.\n */\nexport function currentTime(): string {\n  return new Date().toLocaleTimeString();\n}\n\n/**\n * Increments a value once a second.\n * @customfunction\n * @param incrementBy Amount to increment\n * @param invocation Custom function handler\n */\nexport function increment(incrementBy: number, invocation: CustomFunctions.StreamingInvocation<number>): void {\n  let result = 0;\n  const timer = setInterval(() => {\n    result += incrementBy;\n    invocation.setResult(result);\n  }, 1000);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n}\n\n/**\n * Writes a message to console.log().\n * @customfunction LOG\n * @param message String to write.\n * @returns String to write.\n */\nexport function logMessage(message: string): string {\n  console.log(message);\n\n  return message;\n}\n\n\n/**\n * Calculates the volume of a sphere.\n * @customfunction\n * @returns The volume of the sphere.\n */\nasync function jiaruitestcf2() {\n  // Retrieve the context object.\n  const context = new Excel.RequestContext();\n\n  // Use the context object to access the cell at the input address.\n  const range = context.workbook.worksheets.getActiveWorksheet().getRange(\"A1\");\n  range.load(\"values\");\n  await context.sync();\n\n  // Return the value of the cell at the input address.\n  return range.values[0][0];\n}\n\n\n/**\n * Take a number as the input value and return a formatted number value as the output.\n * @customfunction\n * @param {number} value\n * @param {string} format (e.g. \"0.00%\")\n * @returns A formatted number value.\n */\nfunction createFormattedNumber(value, format) {\n  return {\n      type: \"FormattedNumber\",\n      basicValue: value,\n      numberFormat: format\n  }\n}\nCustomFunctions.associate(\"ADD\", add);\nCustomFunctions.associate(\"ADDANDWAIT10S\", addAndWait10s);\nCustomFunctions.associate(\"ADDANDWAIT2S\", addAndWait2s);\nCustomFunctions.associate(\"ADDANDWAIT3S\", addAndWait3s);\nCustomFunctions.associate(\"ADDANDWAIT5S\", addAndWait5s);\nCustomFunctions.associate(\"CLOCK\", clock);\nCustomFunctions.associate(\"INCREMENT\", increment);\nCustomFunctions.associate(\"LOG\", logMessage);\nCustomFunctions.associate(\"JIARUITESTCF2\", jiaruitestcf2);\nCustomFunctions.associate(\"CREATEFORMATTEDNUMBER\", createFormattedNumber);","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[26098](0, __webpack_exports__);\n"],"names":["add","first","second","addAndWait10s","wait","addAndWait2s","addAndWait3s","addAndWait5s","ms","start","Date","now","clock","invocation","timer","setInterval","time","currentTime","setResult","onCanceled","clearInterval","toLocaleTimeString","increment","incrementBy","result","logMessage","message","console","log","exports","CustomFunctions","associate","context","Excel","RequestContext","range","workbook","worksheets","getActiveWorksheet","getRange","load","sync","_a","sent","values","value","format","type","basicValue","numberFormat"],"sourceRoot":""}